<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>SPIRITED | A Miyazaki Experience</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/gsap/3.12.2/gsap.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/gsap/3.12.2/ScrollTrigger.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/three.js/0.155.0/three.min.js"></script>
    <script>
      tailwind.config = {
        theme: {
          extend: {
            colors: {
              soil: {
                900: "#1F1B17",
                800: "#2D271F",
                700: "#3A2E25",
                600: "#473A2E",
                500: "#5A4A3C",
              },
              clay: {
                900: "#744d37",
                800: "#8B5D42",
                700: "#A26D4D",
                600: "#B87E5F",
                500: "#C79174",
              },
              forest: {
                900: "#2D3F27",
                800: "#344A2C",
                700: "#3B5631",
                600: "#426237",
                500: "#4A6D3F",
              },
              mushroom: {
                900: "#B5AD9E",
                800: "#C1BAA9",
                700: "#CDC7B5",
                600: "#DCD2C1",
                500: "#E8E0CF",
              },
            },
            fontFamily: {
              sans: ["Inter", "sans-serif"],
              serif: ["Noto Serif JP", "serif"],
            },
            animation: {
              float: "float 6s ease-in-out infinite",
              "float-delay": "float 6s ease-in-out 2s infinite",
              "float-slow": "float 10s ease-in-out infinite",
              "spin-slow": "spin 20s linear infinite",
            },
            keyframes: {
              float: {
                "0%, 100%": { transform: "translateY(0)" },
                "50%": { transform: "translateY(-20px)" },
              },
            },
          },
        },
      };
    </script>
    <style>
      @import url("https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&family=Noto+Serif+JP:wght@300;400;500;600;700&display=swap");

      html {
        scroll-behavior: smooth;
        cursor: none;
      }

      body {
        overflow-x: hidden;
      }

      canvas {
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        z-index: -1;
        filter: brightness(1.1) contrast(1.1);
      }

      .custom-cursor {
        position: fixed;
        top: 0;
        left: 0;
        width: 24px;
        height: 24px;
        border-radius: 50%;
        pointer-events: none;
        z-index: 9999;
        mix-blend-mode: difference;
        transition: transform 0.1s ease;
      }

      .custom-cursor-dot {
        position: absolute;
        top: 50%;
        left: 50%;
        width: 8px;
        height: 8px;
        border-radius: 50%;
        background-color: #dcd2c1;
        transform: translate(-50%, -50%);
      }

      .custom-cursor-circle {
        position: absolute;
        top: 50%;
        left: 50%;
        width: 40px;
        height: 40px;
        border-radius: 50%;
        border: 1px solid #dcd2c1;
        transform: translate(-50%, -50%);
        transition: width 0.3s, height 0.3s;
      }

      .hover-link:hover ~ .custom-cursor .custom-cursor-circle {
        width: 60px;
        height: 60px;
      }

      .chars {
        display: inline-block;
      }

      .fullpage-section {
        height: 100vh;
        width: 100vw;
        position: relative;
        overflow: hidden;
      }

      .parallax {
        will-change: transform;
      }

      .noise-filter {
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        z-index: 100;
        pointer-events: none;
        opacity: 0.05;
        background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='200' height='200'%3E%3Cfilter id='a' x='0' y='0'%3E%3CfeTurbulence type='fractalNoise' baseFrequency='.7' numOctaves='4' stitchTiles='stitch'/%3E%3C/filter%3E%3Crect width='100%25' height='100%25' filter='url(%23a)'/%3E%3C/svg%3E");
      }

      .image-track {
        display: flex;
        gap: 4vmin;
        position: absolute;
        top: 50%;
        transform: translate(0%, -50%);
        user-select: none;
      }

      .image-track > .image {
        width: 40vmin;
        height: 56vmin;
        object-fit: cover;
        object-position: 100% center;
      }

      .spiral-text {
        animation: rotateText 20s linear infinite;
      }

      @keyframes rotateText {
        from {
          transform: rotate(0deg);
        }
        to {
          transform: rotate(360deg);
        }
      }

      .split-text-container {
        overflow: hidden;
      }

      .split-text {
        display: inline-block;
      }

      .button-gradient-border {
        position: relative;
        z-index: 0;
      }

      .button-gradient-border::before {
        content: "";
        position: absolute;
        z-index: -1;
        inset: 0;
        padding: 1px;
        border-radius: 30px;
        background: linear-gradient(45deg, #b87e5f, #4a6741, #dcd2c1);
        -webkit-mask: linear-gradient(#fff 0 0) content-box,
          linear-gradient(#fff 0 0);
        -webkit-mask-composite: xor;
        mask-composite: exclude;
      }

      .section-transition-mask {
        position: absolute;
        left: 0;
        width: 100%;
        height: 15vh;
        background: linear-gradient(
          to top,
          rgba(31, 27, 23, 1),
          rgba(31, 27, 23, 0)
        );
        z-index: 2;
        pointer-events: none;
      }

      .magic-text {
        background-image: linear-gradient(45deg, #b87e5f, #4a6741, #dcd2c1);
        -webkit-background-clip: text;
        background-clip: text;
        color: transparent;
        background-size: 200% 200%;
        animation: gradient-shift 5s ease infinite;
      }

      @keyframes gradient-shift {
        0% {
          background-position: 0% 50%;
        }
        50% {
          background-position: 100% 50%;
        }
        100% {
          background-position: 0% 50%;
        }
      }

      .mask-container {
        mask-image: url("data:image/svg+xml,%3Csvg width='100%25' height='100%25' viewBox='0 0 100 100' xmlns='http://www.w3.org/2000/svg'%3E%3Cdefs%3E%3ClinearGradient id='a' gradientTransform='rotate(90)'%3E%3Cstop offset='0' stop-color='%23000'/%3E%3Cstop offset='0.5' stop-color='%23000'/%3E%3Cstop offset='1' stop-color='%23000' stop-opacity='0'/%3E%3C/linearGradient%3E%3Cmask id='b'%3E%3Crect width='100' height='100' fill='url(%23a)'/%3E%3C/mask%3E%3C/defs%3E%3Crect width='100' height='100' fill='%23fff' mask='url(%23b)'/%3E%3C/svg%3E");
        mask-size: 100% 100%;
        -webkit-mask-image: url("data:image/svg+xml,%3Csvg width='100%25' height='100%25' viewBox='0 0 100 100' xmlns='http://www.w3.org/2000/svg'%3E%3Cdefs%3E%3ClinearGradient id='a' gradientTransform='rotate(90)'%3E%3Cstop offset='0' stop-color='%23000'/%3E%3Cstop offset='0.5' stop-color='%23000'/%3E%3Cstop offset='1' stop-color='%23000' stop-opacity='0'/%3E%3C/linearGradient%3E%3Cmask id='b'%3E%3Crect width='100' height='100' fill='url(%23a)'/%3E%3C/mask%3E%3C/defs%3E%3Crect width='100' height='100' fill='%23fff' mask='url(%23b)'/%3E%3C/svg%3E");
        -webkit-mask-size: 100% 100%;
      }
    </style>
  </head>
  <body
    class="bg-soil-900 text-mushroom-600 font-sans selection:bg-clay-700 selection:text-mushroom-500"
  >
    <canvas id="bg-canvas"></canvas>
    <div class="noise-filter"></div>

    <div class="custom-cursor">
      <div class="custom-cursor-dot"></div>
      <div class="custom-cursor-circle"></div>
    </div>

    <div
      class="preloader fixed inset-0 bg-soil-900 z-50 flex items-center justify-center"
    >
      <div class="preloader-content text-center">
        <h2 class="text-2xl font-serif mb-8 opacity-0" id="preloader-text">
          <span class="block">Journey into the</span>
          <span class="block text-5xl magic-text mt-2">SPIRITED</span>
        </h2>
        <div
          class="w-64 h-1 bg-mushroom-900 bg-opacity-30 rounded-full mx-auto overflow-hidden"
        >
          <div
            class="progress-bar h-full w-0 bg-clay-600 rounded-full transform origin-left"
          ></div>
        </div>
      </div>
    </div>

    <header class="fixed top-0 left-0 w-full z-40 pointer-events-none">
      <div
        class="container mx-auto py-8 px-4 md:px-8 flex justify-between items-center"
      >
        <a
          href="#"
          class="font-serif text-lg sm:text-xl hover-link pointer-events-auto group transition-all duration-300"
        >
          <span
            class="inline-block transform group-hover:translate-x-1 transition-transform duration-300"
            >S</span
          >
          <span
            class="inline-block transform group-hover:translate-y-1 transition-transform duration-300"
            >P</span
          >
          <span
            class="inline-block transform group-hover:-translate-y-1 transition-transform duration-300"
            >I</span
          >
          <span
            class="inline-block transform group-hover:translate-x-1 transition-transform duration-300"
            >R</span
          >
          <span
            class="inline-block transform group-hover:-translate-x-1 transition-transform duration-300"
            >I</span
          >
          <span
            class="inline-block transform group-hover:translate-y-1 transition-transform duration-300"
            >T</span
          >
          <span
            class="inline-block transform group-hover:-translate-y-1 transition-transform duration-300"
            >E</span
          >
          <span
            class="inline-block transform group-hover:-translate-x-1 transition-transform duration-300"
            >D</span
          >
        </a>
        <nav class="hidden md:block">
          <ul class="flex space-x-8 text-sm font-light">
            <li>
              <a
                href="#journey"
                class="hover-link pointer-events-auto opacity-70 hover:opacity-100 transition-opacity duration-300"
                >JOURNEY</a
              >
            </li>
            <li>
              <a
                href="#spirits"
                class="hover-link pointer-events-auto opacity-70 hover:opacity-100 transition-opacity duration-300"
                >SPIRITS</a
              >
            </li>
            <li>
              <a
                href="#world"
                class="hover-link pointer-events-auto opacity-70 hover:opacity-100 transition-opacity duration-300"
                >WORLD</a
              >
            </li>
            <li>
              <a
                href="#contact"
                class="hover-link pointer-events-auto opacity-70 hover:opacity-100 transition-opacity duration-300"
                >CONTACT</a
              >
            </li>
          </ul>
        </nav>
        <button
          class="menu-toggle pointer-events-auto md:hidden w-8 h-8 flex flex-col justify-center items-center space-y-1"
        >
          <span
            class="block w-5 h-px bg-mushroom-600 transform transition-transform duration-300"
          ></span>
          <span
            class="block w-5 h-px bg-mushroom-600 transform transition-transform duration-300"
          ></span>
        </button>
      </div>
    </header>

    <main>
      <section
        id="hero"
        class="fullpage-section flex flex-col justify-center relative"
      >
        <div class="container mx-auto px-4 md:px-8 relative z-10">
          <div class="split-text-container">
            <h1
              class="hero-title text-4xl sm:text-5xl md:text-7xl lg:text-9xl font-serif leading-tight mb-4 opacity-0"
            >
              <span class="block">MIYAZAKI'S</span>
              <span class="block magic-text">EARTHY MAGIC</span>
            </h1>
          </div>
          <div class="split-text-container mt-4">
            <p class="hero-subtitle text-lg md:text-xl max-w-xl opacity-0">
              Where the boundaries between dreams and reality blur into a
              tapestry of <span class="text-clay-600">wonder</span>,
              <span class="text-forest-600">nature</span>, and
              <span class="text-clay-500">imagination</span>.
            </p>
          </div>
          <div class="mt-12 opacity-0 hero-cta">
            <a
              href="#journey"
              class="button-gradient-border hover-link inline-block py-3 px-8 rounded-full text-sm uppercase tracking-widest transition-all duration-300 hover:bg-soil-800"
              >Begin the Journey</a
            >
          </div>
        </div>
        <div
          class="absolute bottom-0 left-0 w-full h-64 pointer-events-none mask-container"
        ></div>

        <div
          class="absolute -bottom-16 right-16 w-32 h-32 opacity-0 hero-spiral"
        >
          <div class="relative w-full h-full">
            <div
              class="spiral-text absolute inset-0 flex items-center justify-center"
            >
              <svg viewBox="0 0 100 100" width="100%" height="100%">
                <path
                  id="curve"
                  fill="transparent"
                  d="M 50,50 m -37,0 a 37,37 0 1,1 74,0 a 37,37 0 1,1 -74,0"
                />
                <text width="100%">
                  <textPath
                    xlink:href="#curve"
                    class="text-xs tracking-widest fill-current text-mushroom-700 opacity-70"
                  >
                    SCROLL TO EXPLORE • SCROLL TO EXPLORE •
                  </textPath>
                </text>
              </svg>
            </div>
            <div
              class="absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 w-4 h-4 bg-clay-600 rounded-full"
            ></div>
          </div>
        </div>
      </section>

      <section id="journey" class="fullpage-section relative py-24">
        <div
          class="container mx-auto px-4 md:px-8 relative z-10 h-full flex flex-col justify-center"
        >
          <div class="mb-16">
            <span
              class="text-sm text-clay-600 block mb-2 opacity-0 journey-label"
              >01 — JOURNEY</span
            >
            <h2
              class="text-3xl sm:text-4xl md:text-5xl lg:text-6xl font-serif leading-tight opacity-0 journey-title"
            >
              Timeless <span class="magic-text">Wanderings</span>
            </h2>
          </div>

          <div
            class="image-track opacity-0 journey-track"
            data-mouse-down-at="0"
            data-prev-percentage="0"
          >
            <img
              class="image"
              src="/api/placeholder/400/560"
              alt="Spirited Away Scene"
            />
            <img
              class="image"
              src="/api/placeholder/400/560"
              alt="Princess Mononoke"
            />
            <img
              class="image"
              src="/api/placeholder/400/560"
              alt="My Neighbor Totoro"
            />
            <img
              class="image"
              src="/api/placeholder/400/560"
              alt="Howl's Moving Castle"
            />
            <img
              class="image"
              src="/api/placeholder/400/560"
              alt="Castle in the Sky"
            />
            <img
              class="image"
              src="/api/placeholder/400/560"
              alt="Kiki's Delivery Service"
            />
            <img class="image" src="/api/placeholder/400/560" alt="Ponyo" />
          </div>

          <div class="absolute bottom-6 right-6 opacity-0 journey-hint">
            <span class="text-xs text-mushroom-900 block"
              >DRAG TO EXPLORE →</span
            >
          </div>
        </div>
        <div class="section-transition-mask bottom-0"></div>
        <div class="section-transition-mask top-0 rotate-180"></div>
      </section>

      <section id="spirits" class="fullpage-section relative py-24">
        <div
          class="container mx-auto px-4 md:px-8 relative z-10 h-full flex flex-col justify-center"
        >
          <div class="grid grid-cols-1 md:grid-cols-2 gap-16 items-center">
            <div>
              <span
                class="text-sm text-forest-600 block mb-2 opacity-0 spirits-label"
                >02 — SPIRITS</span
              >
              <h2
                class="text-3xl sm:text-4xl md:text-5xl lg:text-6xl font-serif leading-tight opacity-0 spirits-title"
              >
                Forest <span class="magic-text">Guardians</span>
              </h2>
              <p class="mt-6 max-w-md opacity-0 spirits-text">
                The spirits of the forest reveal themselves only to those with
                pure hearts and open minds. They are the guardians of nature,
                the keepers of ancient wisdom.
              </p>
              <div class="mt-8 opacity-0 spirits-cta">
                <a
                  href="#"
                  class="button-gradient-border hover-link inline-block py-3 px-8 rounded-full text-sm uppercase tracking-widest transition-all duration-300 hover:bg-soil-800"
                  >Meet the Spirits</a
                >
              </div>
            </div>
            <div class="relative spirits-visual opacity-0">
              <div class="w-full aspect-square relative">
                <div class="absolute inset-0 flex items-center justify-center">
                  <div
                    class="w-4/5 h-4/5 bg-gradient-to-br from-forest-700 to-forest-900 rounded-full opacity-20 animate-pulse"
                  ></div>
                  <div
                    class="w-3/5 h-3/5 bg-gradient-to-br from-clay-700 to-clay-900 rounded-full opacity-10 animate-float"
                  ></div>
                  <div
                    class="absolute inset-0 flex items-center justify-center"
                  >
                    <svg
                      viewBox="0 0 200 200"
                      width="100%"
                      height="100%"
                      class="animate-float-slow"
                    >
                      <!-- Kodama-inspired forest spirit -->
                      <circle cx="100" cy="100" r="40" fill="#DCD2C1" />
                      <circle cx="100" cy="90" r="35" fill="#DCD2C1" />
                      <circle cx="100" cy="75" r="25" fill="#DCD2C1" />
                      <circle cx="85" cy="70" r="4" fill="#3A2E25" />
                      <circle cx="115" cy="70" r="4" fill="#3A2E25" />
                      <ellipse cx="100" cy="80" rx="8" ry="2" fill="#3A2E25" />
                      <line
                        x1="100"
                        y1="90"
                        x2="100"
                        y2="105"
                        stroke="#3A2E25"
                        stroke-width="1"
                      />
                      <line
                        x1="95"
                        y1="95"
                        x2="90"
                        y2="110"
                        stroke="#3A2E25"
                        stroke-width="1"
                      />
                      <line
                        x1="105"
                        y1="95"
                        x2="110"
                        y2="110"
                        stroke="#3A2E25"
                        stroke-width="1"
                      />
                      <line
                        x1="90"
                        y1="95"
                        x2="85"
                        y2="105"
                        stroke="#3A2E25"
                        stroke-width="1"
                      />
                      <line
                        x1="110"
                        y1="95"
                        x2="115"
                        y2="105"
                        stroke="#3A2E25"
                        stroke-width="1"
                      />
                    </svg>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
        <div class="section-transition-mask bottom-0"></div>
        <div class="section-transition-mask top-0 rotate-180"></div>
      </section>

      <section id="world" class="fullpage-section relative py-24">
        <div
          class="container mx-auto px-4 md:px-8 relative z-10 h-full flex flex-col justify-center"
        >
          <div class="mb-12">
            <span
              class="text-sm text-mushroom-700 block mb-2 opacity-0 world-label"
              >03 — WORLD</span
            >
            <h2
              class="text-3xl sm:text-4xl md:text-5xl lg:text-6xl font-serif leading-tight opacity-0 world-title"
            >
              Breathtaking <span class="magic-text">Landscapes</span>
            </h2>
          </div>

          <div
            class="grid grid-cols-1 md:grid-cols-3 gap-8 opacity-0 world-grid"
          >
            <div
              class="bg-soil-800 bg-opacity-50 p-6 rounded-lg backdrop-filter backdrop-blur-sm border border-soil-700 hover:border-clay-900 transition-all duration-500 transform hover:-translate-y-2"
            >
              <div class="w-full aspect-video mb-4 overflow-hidden rounded">
                <img
                  src="/api/placeholder/400/225"
                  alt="Forest"
                  class="w-full h-full object-cover"
                />
              </div>
              <h3 class="font-serif text-xl mb-2">Ancient Forests</h3>
              <p class="text-sm text-mushroom-800">
                Towering trees that have witnessed centuries, home to spirits
                and creatures of old.
              </p>
            </div>
            <div
              class="bg-soil-800 bg-opacity-50 p-6 rounded-lg backdrop-filter backdrop-blur-sm border border-soil-700 hover:border-forest-900 transition-all duration-500 transform hover:-translate-y-2"
            >
              <div class="w-full aspect-video mb-4 overflow-hidden rounded">
                <img
                  src="/api/placeholder/400/225"
                  alt="Floating Castle"
                  class="w-full h-full object-cover"
                />
              </div>
              <h3 class="font-serif text-xl mb-2">Floating Domains</h3>
              <p class="text-sm text-mushroom-800">
                Castles that drift among clouds, defying gravity yet bound by
                ancient magic.
              </p>
            </div>
            <div
              class="bg-soil-800 bg-opacity-50 p-6 rounded-lg backdrop-filter backdrop-blur-sm border border-soil-700 hover:border-mushroom-900 transition-all duration-500 transform hover:-translate-y-2"
            >
              <div class="w-full aspect-video mb-4 overflow-hidden rounded">
                <img
                  src="/api/placeholder/400/225"
                  alt="Bathhouse"
                  class="w-full h-full object-cover"
                />
              </div>
              <h3 class="font-serif text-xl mb-2">Spirit Realms</h3>
              <p class="text-sm text-mushroom-800">
                Worlds that exist alongside ours, visible only when the
                boundaries between realms thin.
              </p>
            </div>
          </div>
        </div>
        <div class="section-transition-mask bottom-0"></div>
        <div class="section-transition-mask top-0 rotate-180"></div>
      </section>

      <section id="contact" class="fullpage-section relative py-24">
        <div
          class="container mx-auto px-4 md:px-8 relative z-10 h-full flex flex-col justify-center"
        >
          <div class="grid grid-cols-1 md:grid-cols-2 gap-16 items-center">
            <div>
              <span
                class="text-sm text-clay-600 block mb-2 opacity-0 contact-label"
                >04 — CONTACT</span
              >
              <h2
                class="text-3xl sm:text-4xl md:text-5xl lg:text-6xl font-serif leading-tight opacity-0 contact-title"
              >
                Join the <span class="magic-text">Adventure</span>
              </h2>
              <p class="mt-6 max-w-md opacity-0 contact-text">
                Leave the mundane behind and step into a world where imagination
                knows no bounds. Subscribe to embark on this magical journey.
              </p>

              <form class="mt-8 space-y-4 opacity-0 contact-form">
                <div class="relative">
                  <input
                    type="email"
                    placeholder="your@email.com"
                    class="w-full bg-transparent border-b border-mushroom-900 py-2 focus:outline-none focus:border-clay-600 transition-colors duration-300"
                  />
                </div>
                <div class="relative">
                  <input
                    type="text"
                    placeholder="Your Name"
                    class="w-full bg-transparent border-b border-mushroom-900 py-2 focus:outline-none focus:border-clay-600 transition-colors duration-300"
                  />
                </div>
                <div class="mt-8">
                  <button
                    type="submit"
                    class="button-gradient-border hover-link inline-block py-3 px-8 rounded-full text-sm uppercase tracking-widest transition-all duration-300 hover:bg-soil-800"
                  >
                    Send Message
                  </button>
                </div>
              </form>
            </div>
            <div
              class="relative h-full flex items-center justify-center contact-visual opacity-0"
            >
              <div class="relative">
                <svg viewBox="0 0 200 200" width="300" height="300">
                  <circle
                    cx="100"
                    cy="100"
                    r="80"
                    fill="none"
                    stroke="#B87E5F"
                    stroke-width="0.5"
                    class="animate-spin-slow"
                  />
                  <circle
                    cx="100"
                    cy="100"
                    r="60"
                    fill="none"
                    stroke="#4A6741"
                    stroke-width="0.5"
                    class="animate-spin-slow"
                    style="animation-direction: reverse"
                  />
                  <circle
                    cx="100"
                    cy="100"
                    r="40"
                    fill="none"
                    stroke="#DCD2C1"
                    stroke-width="0.5"
                    class="animate-spin-slow"
                  />

                  <!-- Soot sprites -->
                  <circle
                    cx="140"
                    cy="70"
                    r="6"
                    fill="#3A2E25"
                    class="animate-float"
                  />
                  <circle
                    cx="150"
                    cy="110"
                    r="4"
                    fill="#3A2E25"
                    class="animate-float-delay"
                  />
                  <circle
                    cx="60"
                    cy="130"
                    r="5"
                    fill="#3A2E25"
                    class="animate-float"
                  />
                  <circle
                    cx="50"
                    cy="70"
                    r="7"
                    fill="#3A2E25"
                    class="animate-float-delay"
                  />
                  <circle
                    cx="110"
                    cy="160"
                    r="5"
                    fill="#3A2E25"
                    class="animate-float"
                  />

                  <!-- Eyes -->
                  <circle
                    cx="140"
                    cy="70"
                    r="1.5"
                    fill="#DCD2C1"
                    class="animate-pulse"
                  />
                  <circle
                    cx="138"
                    cy="70"
                    r="1.5"
                    fill="#DCD2C1"
                    class="animate-pulse"
                  />
                  <circle
                    cx="150"
                    cy="110"
                    r="1"
                    fill="#DCD2C1"
                    class="animate-pulse"
                  />
                  <circle
                    cx="152"
                    cy="110"
                    r="1"
                    fill="#DCD2C1"
                    class="animate-pulse"
                  />
                  <circle
                    cx="60"
                    cy="130"
                    r="1.5"
                    fill="#DCD2C1"
                    class="animate-pulse"
                  />
                  <circle
                    cx="62"
                    cy="130"
                    r="1.5"
                    fill="#DCD2C1"
                    class="animate-pulse"
                  />
                  <circle
                    cx="50"
                    cy="70"
                    r="1.5"
                    fill="#DCD2C1"
                    class="animate-pulse"
                  />
                  <circle
                    cx="52"
                    cy="70"
                    r="1.5"
                    fill="#DCD2C1"
                    class="animate-pulse"
                  />
                  <circle
                    cx="110"
                    cy="160"
                    r="1.5"
                    fill="#DCD2C1"
                    class="animate-pulse"
                  />
                  <circle
                    cx="108"
                    cy="160"
                    r="1.5"
                    fill="#DCD2C1"
                    class="animate-pulse"
                  />
                </svg>
              </div>
            </div>
          </div>
        </div>
        <div class="section-transition-mask top-0 rotate-180"></div>
      </section>
    </main>

    <footer class="relative z-20 bg-soil-800 py-16 px-4 md:px-8">
      <div class="container mx-auto grid grid-cols-1 md:grid-cols-3 gap-8">
        <div>
          <h3 class="font-serif text-xl mb-4">SPIRITED</h3>
          <p class="text-sm text-mushroom-900 max-w-xs">
            A digital homage to the magical worlds of Hayao Miyazaki, where
            earth tones bring enchantment to life.
          </p>
        </div>
        <div>
          <h3 class="font-serif text-xl mb-4">Navigate</h3>
          <ul class="text-sm space-y-2">
            <li>
              <a
                href="#journey"
                class="text-mushroom-900 hover:text-clay-600 transition-colors duration-300"
                >Journey</a
              >
            </li>
            <li>
              <a
                href="#spirits"
                class="text-mushroom-900 hover:text-clay-600 transition-colors duration-300"
                >Spirits</a
              >
            </li>
            <li>
              <a
                href="#world"
                class="text-mushroom-900 hover:text-clay-600 transition-colors duration-300"
                >World</a
              >
            </li>
            <li>
              <a
                href="#contact"
                class="text-mushroom-900 hover:text-clay-600 transition-colors duration-300"
                >Contact</a
              >
            </li>
          </ul>
        </div>
        <div>
          <h3 class="font-serif text-xl mb-4">Connect</h3>
          <div class="flex space-x-4">
            <a
              href="#"
              class="w-10 h-10 rounded-full border border-mushroom-900 flex items-center justify-center hover:border-clay-600 hover:text-clay-600 transition-all duration-300"
            >
              <svg class="w-4 h-4" fill="currentColor" viewBox="0 0 24 24">
                <path
                  d="M18.244 2.25h3.308l-7.227 8.26 8.502 11.24H16.17l-5.214-6.817L4.99 21.75H1.68l7.73-8.835L1.254 2.25H8.08l4.713 6.231zm-1.161 17.52h1.833L7.084 4.126H5.117z"
                />
              </svg>
            </a>
            <a
              href="#"
              class="w-10 h-10 rounded-full border border-mushroom-900 flex items-center justify-center hover:border-clay-600 hover:text-clay-600 transition-all duration-300"
            >
              <svg class="w-4 h-4" fill="currentColor" viewBox="0 0 24 24">
                <path
                  d="M12 2.163c3.204 0 3.584.012 4.85.07 3.252.148 4.771 1.691 4.919 4.919.058 1.265.069 1.645.069 4.849 0 3.205-.012 3.584-.069 4.849-.149 3.225-1.664 4.771-4.919 4.919-1.266.058-1.644.07-4.85.07-3.204 0-3.584-.012-4.849-.07-3.26-.149-4.771-1.699-4.919-4.92-.058-1.265-.07-1.644-.07-4.849 0-3.204.013-3.583.07-4.849.149-3.227 1.664-4.771 4.919-4.919 1.266-.057 1.645-.069 4.849-.069zm0-2.163c-3.259 0-3.667.014-4.947.072-4.358.2-6.78 2.618-6.98 6.98-.059 1.281-.073 1.689-.073 4.948 0 3.259.014 3.668.072 4.948.2 4.358 2.618 6.78 6.98 6.98 1.281.058 1.689.072 4.948.072 3.259 0 3.668-.014 4.948-.072 4.354-.2 6.782-2.618 6.979-6.98.059-1.28.073-1.689.073-4.948 0-3.259-.014-3.667-.072-4.947-.196-4.354-2.617-6.78-6.979-6.98-1.281-.059-1.69-.073-4.949-.073zm0 5.838c-3.403 0-6.162 2.759-6.162 6.162s2.759 6.163 6.162 6.163 6.162-2.759 6.162-6.163c0-3.403-2.759-6.162-6.162-6.162zm0 10.162c-2.209 0-4-1.79-4-4 0-2.209 1.791-4 4-4s4 1.791 4 4c0 2.21-1.791 4-4 4zm6.406-11.845c-.796 0-1.441.645-1.441 1.44s.645 1.44 1.441 1.44c.795 0 1.439-.645 1.439-1.44s-.644-1.44-1.439-1.44z"
                />
              </svg>
            </a>
            <a
              href="#"
              class="w-10 h-10 rounded-full border border-mushroom-900 flex items-center justify-center hover:border-clay-600 hover:text-clay-600 transition-all duration-300"
            >
              <svg class="w-4 h-4" fill="currentColor" viewBox="0 0 24 24">
                <path
                  d="M19.615 3.184c-3.604-.246-11.631-.245-15.23 0-3.897.266-4.356 2.62-4.385 8.816.029 6.185.484 8.549 4.385 8.816 3.6.245 11.626.246 15.23 0 3.897-.266 4.356-2.62 4.385-8.816-.029-6.185-.484-8.549-4.385-8.816zm-10.615 12.816v-8l8 3.993-8 4.007z"
                />
              </svg>
            </a>
          </div>
          <p class="text-sm text-mushroom-900 mt-4">
            © 2025 SPIRITED. All rights reserved.
          </p>
        </div>
      </div>
    </footer>

    <script>
      // Initialize ThreeJS Background
      const initThreeBackground = () => {
        const canvas = document.getElementById("bg-canvas");
        const scene = new THREE.Scene();
        const camera = new THREE.PerspectiveCamera(
          75,
          window.innerWidth / window.innerHeight,
          0.1,
          1000
        );
        const renderer = new THREE.WebGLRenderer({ canvas, alpha: true });

        renderer.setSize(window.innerWidth, window.innerHeight);
        renderer.setPixelRatio(Math.min(window.devicePixelRatio, 2));

        // Particles
        const particlesGeometry = new THREE.BufferGeometry();
        const count = 1000;

        const positions = new Float32Array(count * 3);
        const colors = new Float32Array(count * 3);

        const colorPalette = [
          [0.29, 0.41, 0.25], // #4A6741 forest
          [0.72, 0.49, 0.37], // #B87E5F clay
          [0.86, 0.82, 0.76], // #DCD2C1 mushroom
          [0.23, 0.18, 0.15], // #3A2E25 soil
        ];

        for (let i = 0; i < count * 3; i += 3) {
          // Positions
          positions[i] = (Math.random() - 0.5) * 10;
          positions[i + 1] = (Math.random() - 0.5) * 10;
          positions[i + 2] = (Math.random() - 0.5) * 10;

          // Colors - randomly select from palette
          const colorIndex = Math.floor(Math.random() * colorPalette.length);
          colors[i] = colorPalette[colorIndex][0];
          colors[i + 1] = colorPalette[colorIndex][1];
          colors[i + 2] = colorPalette[colorIndex][2];
        }

        particlesGeometry.setAttribute(
          "position",
          new THREE.BufferAttribute(positions, 3)
        );
        particlesGeometry.setAttribute(
          "color",
          new THREE.BufferAttribute(colors, 3)
        );

        const particlesMaterial = new THREE.PointsMaterial({
          size: 0.05,
          sizeAttenuation: true,
          vertexColors: true,
          transparent: true,
          opacity: 0.3,
        });

        const particles = new THREE.Points(
          particlesGeometry,
          particlesMaterial
        );
        scene.add(particles);

        camera.position.z = 3;

        // Animation
        const clock = new THREE.Clock();

        const tick = () => {
          const elapsedTime = clock.getElapsedTime();

          // Rotate particles
          particles.rotation.y = elapsedTime * 0.05;

          // Move particles up and down slightly with sin wave
          const positions = particlesGeometry.attributes.position.array;
          for (let i = 0; i < count; i++) {
            const i3 = i * 3;
            const x = positions[i3];
            const y = positions[i3 + 1];
            const z = positions[i3 + 2];

            positions[i3 + 1] = y + Math.sin(elapsedTime + x) * 0.001;
          }
          particlesGeometry.attributes.position.needsUpdate = true;

          // Render
          renderer.render(scene, camera);

          // Call tick again on the next frame
          window.requestAnimationFrame(tick);
        };

        tick();

        // Handle resize
        window.addEventListener("resize", () => {
          // Update camera
          camera.aspect = window.innerWidth / window.innerHeight;
          camera.updateProjectionMatrix();

          // Update renderer
          renderer.setSize(window.innerWidth, window.innerHeight);
          renderer.setPixelRatio(Math.min(window.devicePixelRatio, 2));
        });
      };

      // Custom cursor
      const initCustomCursor = () => {
        const cursor = document.querySelector(".custom-cursor");

        document.addEventListener("mousemove", (e) => {
          cursor.style.transform = `translate(${e.clientX}px, ${e.clientY}px)`;
        });

        document.addEventListener("mousedown", () => {
          cursor.style.transform = `translate(${e.clientX}px, ${e.clientY}px) scale(0.8)`;
        });

        document.addEventListener("mouseup", () => {
          cursor.style.transform = `translate(${e.clientX}px, ${e.clientY}px) scale(1)`;
        });

        // Hide default cursor
        document.body.style.cursor = "none";

        // Handle hover states for links
        const hoverLinks = document.querySelectorAll(".hover-link");
        hoverLinks.forEach((link) => {
          link.addEventListener("mouseenter", () => {
            cursor.classList.add("hovering");
          });
          link.addEventListener("mouseleave", () => {
            cursor.classList.remove("hovering");
          });
        });
      };

      // Preloader animation
      const initPreloader = () => {
        const preloader = document.querySelector(".preloader");
        const progressBar = document.querySelector(".progress-bar");
        const preloaderText = document.getElementById("preloader-text");

        // Animate the progress bar
        gsap.to(progressBar, {
          width: "100%",
          duration: 2.5,
          ease: "power2.inOut",
        });

        // Fade in the text
        gsap.to(preloaderText, {
          opacity: 1,
          duration: 1,
          delay: 0.5,
        });

        // After animation completes, fade out the preloader
        gsap.to(preloader, {
          opacity: 0,
          duration: 1,
          delay: 3,
          onComplete: () => {
            preloader.style.display = "none";
            // Start page animations
            initPageAnimations();
          },
        });
      };

      // Image track
      const initImageTrack = () => {
        const track = document.querySelector(".image-track");

        if (!track) return;

        let isMouseDown = false;
        let mouseDownAt = 0;
        let prevPercentage = 0;

        const handleMouseDown = (e) => {
          isMouseDown = true;
          mouseDownAt = e.clientX;
        };

        const handleMouseUp = () => {
          isMouseDown = false;
          prevPercentage = parseFloat(track.dataset.prevPercentage);
        };

        const handleMouseMove = (e) => {
          if (!isMouseDown) return;

          const mouseDelta = parseFloat(mouseDownAt) - e.clientX;
          const maxDelta = window.innerWidth / 2;

          const percentage = (mouseDelta / maxDelta) * 100;
          let nextPercentage = parseFloat(prevPercentage) + percentage;
          nextPercentage = Math.max(Math.min(nextPercentage, 0), -100);

          track.dataset.prevPercentage = nextPercentage;

          // Move the track and rotate the images
          gsap.to(track, {
            xPercent: nextPercentage,
            duration: 0.5,
            ease: "power2.out",
          });

          const images = track.querySelectorAll(".image");
          images.forEach((image) => {
            const rotationPercentage = nextPercentage * 0.05;
            gsap.to(image, {
              rotate: `${rotationPercentage}deg`,
              duration: 0.5,
            });
          });
        };

        // Mouse events
        track.addEventListener("mousedown", handleMouseDown);
        window.addEventListener("mouseup", handleMouseUp);
        window.addEventListener("mousemove", handleMouseMove);

        // Touch events for mobile
        track.addEventListener("touchstart", (e) => {
          isMouseDown = true;
          mouseDownAt = e.touches[0].clientX;
        });

        window.addEventListener("touchend", () => {
          isMouseDown = false;
          prevPercentage = parseFloat(track.dataset.prevPercentage);
        });

        window.addEventListener("touchmove", (e) => {
          if (!isMouseDown) return;

          const mouseDelta = parseFloat(mouseDownAt) - e.touches[0].clientX;
          const maxDelta = window.innerWidth / 2;

          const percentage = (mouseDelta / maxDelta) * 100;
          let nextPercentage = parseFloat(prevPercentage) + percentage;
          nextPercentage = Math.max(Math.min(nextPercentage, 0), -100);

          track.dataset.prevPercentage = nextPercentage;

          // Move the track and rotate the images
          gsap.to(track, {
            xPercent: nextPercentage,
            duration: 0.5,
            ease: "power2.out",
          });

          const images = track.querySelectorAll(".image");
          images.forEach((image) => {
            const rotationPercentage = nextPercentage * 0.05;
            gsap.to(image, {
              rotate: `${rotationPercentage}deg`,
              duration: 0.5,
            });
          });
        });
      };

      // Smooth scrolling
      const initSmoothScroll = () => {
        document.querySelectorAll('a[href^="#"]').forEach((anchor) => {
          anchor.addEventListener("click", function (e) {
            e.preventDefault();

            const targetId = this.getAttribute("href");
            const targetElement = document.querySelector(targetId);

            if (targetElement) {
              window.scrollTo({
                top: targetElement.offsetTop,
                behavior: "smooth",
              });
            }
          });
        });
      };

      // Page animations
      const initPageAnimations = () => {
        // Hero animations
        gsap.to(".hero-title", {
          opacity: 1,
          y: 0,
          duration: 1,
          stagger: 0.2,
          ease: "power3.out",
        });

        gsap.to(".hero-subtitle", {
          opacity: 1,
          y: 0,
          duration: 1,
          delay: 0.5,
          ease: "power3.out",
        });

        gsap.to(".hero-cta", {
          opacity: 1,
          y: 0,
          duration: 1,
          delay: 0.8,
          ease: "power3.out",
        });

        gsap.to(".hero-spiral", {
          opacity: 1,
          duration: 1,
          delay: 1.2,
          ease: "power3.out",
        });

        // Scroll-triggered animations
        gsap.registerPlugin(ScrollTrigger);

        // Journey section
        gsap.to(".journey-label", {
          scrollTrigger: {
            trigger: "#journey",
            start: "top 80%",
            end: "bottom 80%",
            toggleActions: "play none none none",
          },
          opacity: 1,
          y: 0,
          duration: 0.8,
          ease: "power3.out",
        });

        gsap.to(".journey-title", {
          scrollTrigger: {
            trigger: "#journey",
            start: "top 80%",
            end: "bottom 80%",
            toggleActions: "play none none none",
          },
          opacity: 1,
          y: 0,
          duration: 0.8,
          delay: 0.2,
          ease: "power3.out",
        });

        gsap.to(".journey-track", {
          scrollTrigger: {
            trigger: "#journey",
            start: "top 60%",
            end: "bottom 80%",
            toggleActions: "play none none none",
          },
          opacity: 1,
          duration: 1,
          delay: 0.4,
          ease: "power3.out",
        });

        gsap.to(".journey-hint", {
          scrollTrigger: {
            trigger: "#journey",
            start: "top 60%",
            end: "bottom 80%",
            toggleActions: "play none none none",
          },
          opacity: 0.7,
          duration: 1,
          delay: 1,
          ease: "power3.out",
        });

        // Spirits section
        gsap.to(".spirits-label", {
          scrollTrigger: {
            trigger: "#spirits",
            start: "top 80%",
            end: "bottom 80%",
            toggleActions: "play none none none",
          },
          opacity: 1,
          y: 0,
          duration: 0.8,
          ease: "power3.out",
        });

        gsap.to(".spirits-title", {
          scrollTrigger: {
            trigger: "#spirits",
            start: "top 80%",
            end: "bottom 80%",
            toggleActions: "play none none none",
          },
          opacity: 1,
          y: 0,
          duration: 0.8,
          delay: 0.2,
          ease: "power3.out",
        });

        gsap.to(".spirits-text", {
          scrollTrigger: {
            trigger: "#spirits",
            start: "top 80%",
            end: "bottom 80%",
            toggleActions: "play none none none",
          },
          opacity: 1,
          y: 0,
          duration: 0.8,
          delay: 0.4,
          ease: "power3.out",
        });

        gsap.to(".spirits-cta", {
          scrollTrigger: {
            trigger: "#spirits",
            start: "top 80%",
            end: "bottom 80%",
            toggleActions: "play none none none",
          },
          opacity: 1,
          y: 0,
          duration: 0.8,
          delay: 0.6,
          ease: "power3.out",
        });

        gsap.to(".spirits-visual", {
          scrollTrigger: {
            trigger: "#spirits",
            start: "top 60%",
            end: "bottom 80%",
            toggleActions: "play none none none",
          },
          opacity: 1,
          scale: 1,
          duration: 1,
          delay: 0.4,
          ease: "power3.out",
        });

        // World section
        gsap.to(".world-label", {
          scrollTrigger: {
            trigger: "#world",
            start: "top 80%",
            end: "bottom 80%",
            toggleActions: "play none none none",
          },
          opacity: 1,
          y: 0,
          duration: 0.8,
          ease: "power3.out",
        });

        gsap.to(".world-title", {
          scrollTrigger: {
            trigger: "#world",
            start: "top 80%",
            end: "bottom 80%",
            toggleActions: "play none none none",
          },
          opacity: 1,
          y: 0,
          duration: 0.8,
          delay: 0.2,
          ease: "power3.out",
        });

        gsap.to(".world-grid", {
          scrollTrigger: {
            trigger: "#world",
            start: "top 60%",
            end: "bottom 80%",
            toggleActions: "play none none none",
          },
          opacity: 1,
          y: 0,
          stagger: 0.2,
          duration: 0.8,
          delay: 0.4,
          ease: "power3.out",
        });

        // Contact section
        gsap.to(".contact-label", {
          scrollTrigger: {
            trigger: "#contact",
            start: "top 80%",
            end: "bottom 80%",
            toggleActions: "play none none none",
          },
          opacity: 1,
          y: 0,
          duration: 0.8,
          ease: "power3.out",
        });

        gsap.to(".contact-title", {
          scrollTrigger: {
            trigger: "#contact",
            start: "top 80%",
            end: "bottom 80%",
            toggleActions: "play none none none",
          },
          opacity: 1,
          y: 0,
          duration: 0.8,
          delay: 0.2,
          ease: "power3.out",
        });

        gsap.to(".contact-text", {
          scrollTrigger: {
            trigger: "#contact",
            start: "top 80%",
            end: "bottom 80%",
            toggleActions: "play none none none",
          },
          opacity: 1,
          y: 0,
          duration: 0.8,
          delay: 0.4,
          ease: "power3.out",
        });

        gsap.to(".contact-form", {
          scrollTrigger: {
            trigger: "#contact",
            start: "top 80%",
            end: "bottom 80%",
            toggleActions: "play none none none",
          },
          opacity: 1,
          y: 0,
          duration: 0.8,
          delay: 0.6,
          ease: "power3.out",
        });

        gsap.to(".contact-visual", {
          scrollTrigger: {
            trigger: "#contact",
            start: "top 60%",
            end: "bottom 80%",
            toggleActions: "play none none none",
          },
          opacity: 1,
          scale: 1,
          duration: 1,
          delay: 0.4,
          ease: "power3.out",
        });
      };

      // Mobile menu
      const initMobileMenu = () => {
        const menuToggle = document.querySelector(".menu-toggle");
        const menuItems = document.querySelector("nav ul");

        if (!menuToggle || !menuItems) return;

        let isOpen = false;

        menuToggle.addEventListener("click", () => {
          isOpen = !isOpen;

          if (isOpen) {
            // Create mobile menu overlay
            const overlay = document.createElement("div");
            overlay.classList.add("mobile-menu-overlay");
            overlay.style.cssText = `
                        position: fixed;
                        top: 0;
                        left: 0;
                        width: 100%;
                        height: 100%;
                        background-color: rgba(31, 27, 23, 0.95);
                        z-index: 30;
                        display: flex;
                        flex-direction: column;
                        justify-content: center;
                        align-items: center;
                        opacity: 0;
                        transition: opacity 0.3s ease;
                    `;

            document.body.appendChild(overlay);

            // Clone menu items for the overlay
            const mobileNav = menuItems.cloneNode(true);
            mobileNav.style.cssText = `
                        display: flex;
                        flex-direction: column;
                        align-items: center;
                        gap: 2rem;
                    `;

            // Style each link
            mobileNav.querySelectorAll("a").forEach((link) => {
              link.style.cssText = `
                            font-size: 1.5rem;
                            opacity: 0;
                            transform: translateY(20px);
                        `;

              link.addEventListener("click", () => {
                // Close menu when a link is clicked
                isOpen = false;
                gsap.to(overlay, {
                  opacity: 0,
                  duration: 0.3,
                  onComplete: () => {
                    document.body.removeChild(overlay);
                  },
                });

                // Transform toggle button back
                gsap.to(menuToggle.children[0], {
                  rotateZ: 0,
                  y: 0,
                  duration: 0.3,
                });

                gsap.to(menuToggle.children[1], {
                  rotateZ: 0,
                  y: 0,
                  opacity: 1,
                  duration: 0.3,
                });
              });
            });

            overlay.appendChild(mobileNav);

            // Animate overlay
            gsap.to(overlay, {
              opacity: 1,
              duration: 0.3,
            });

            // Animate links
            gsap.to(mobileNav.querySelectorAll("a"), {
              opacity: 1,
              y: 0,
              stagger: 0.1,
              delay: 0.2,
              duration: 0.5,
              ease: "power3.out",
            });

            // Transform toggle button to X
            gsap.to(menuToggle.children[0], {
              rotateZ: 45,
              y: 2,
              duration: 0.3,
            });

            gsap.to(menuToggle.children[1], {
              rotateZ: -45,
              y: -2,
              duration: 0.3,
            });
          } else {
            // Find and remove overlay
            const overlay = document.querySelector(".mobile-menu-overlay");
            if (overlay) {
              gsap.to(overlay, {
                opacity: 0,
                duration: 0.3,
                onComplete: () => {
                  document.body.removeChild(overlay);
                },
              });
            }

            // Transform toggle button back
            gsap.to(menuToggle.children[0], {
              rotateZ: 0,
              y: 0,
              duration: 0.3,
            });

            gsap.to(menuToggle.children[1], {
              rotateZ: 0,
              y: 0,
              opacity: 1,
              duration: 0.3,
            });
          }
        });
      };

      // Initialize all
      document.addEventListener("DOMContentLoaded", () => {
        initThreeBackground();
        initCustomCursor();
        initPreloader();
        initSmoothScroll();
        initImageTrack();
        initMobileMenu();

        // Split text animation for hero elements
        const heroTitle = document.querySelector(".hero-title");
        if (heroTitle) {
          const splitLines = Array.from(heroTitle.querySelectorAll(".block"));
          splitLines.forEach((line) => {
            const text = line.textContent;
            line.innerHTML = "";

            Array.from(text).forEach((char, i) => {
              const span = document.createElement("span");
              span.textContent = char === " " ? "\u00A0" : char;
              span.classList.add("chars");
              span.style.display = "inline-block";
              span.style.opacity = "0";
              span.style.transform = "translateY(20px)";
              line.appendChild(span);
            });
          });

          gsap.to(".chars", {
            opacity: 1,
            y: 0,
            stagger: 0.02,
            delay: 3.5,
            duration: 0.5,
            ease: "power3.out",
          });
        }

        // Parallax effect
        const parallaxElements = document.querySelectorAll(".parallax");
        parallaxElements.forEach((element) => {
          const depth = element.dataset.depth || 0.2;

          window.addEventListener("scroll", () => {
            const scrollY = window.scrollY;
            element.style.transform = `translateY(${scrollY * depth}px)`;
          });
        });
      });
    </script>
  </body>
</html>
